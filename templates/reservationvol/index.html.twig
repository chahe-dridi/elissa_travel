{% extends 'nav_user.html.twig' %}

{% block body %}

<section class="probootstrap-cover overflow-hidden relative" style="background-image: url('{{ asset('assets/added_image/bg_1.jpg') }}');" data-stellar-background-ratio="0.5" id="section-home">
   
    <div class="overlay"></div>
    
    <div class="container">
        
       
            <div class="form-group">
       
       
                <div class="row">
                    <div class="col-md-12 text-center probootstrap-animate">
                        <h2 class="heading mb50">Available Flights</h2>
                        <a href="{{ path('app_reservationvol_show') }}" class="btn btn-primary">Show Reservation</a>
                    </div>
                </div> 
       
                <div class="row mb-3">
                    <div class="col-md-4">
                        <input type="text" id="departureCity" class="form-control" placeholder="Departure City">
                    </div>
                    <div class="col-md-4">
                        <input type="text" id="arrivalCity" class="form-control" placeholder="Arrival City">
                    </div>
                    <div class="col-md-4">
                        <input type="number" id="maxPrice" class="form-control" placeholder="Max Price">
                    </div>
                </div>
            </div>
       
            <div class="row" id="flightList">
                {% for flight in flights %}
                    <div class="col-md-4 mb-3 probootstrap-form">
                        <div class="card-body" style="height: 100%; background-color: #fff; border-radius: 10px; box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1);"> <!-- Set a fixed height for the card body -->
                            <h5 class="card-title">Flight Information</h5>
                            <p class="card-text departure-airport" style="color: black;">Departure Airport: {{ flight.getairportDepart().getName() }} ({{ flight.getairportDepart().getCity() }}, {{ flight.getairportDepart().getCountry() }})</p>
                            <p class="card-text arrival-airport" style="color: black;">Arrival Airport: {{ flight.getairportarrive().getName() }} ({{ flight.getairportarrive().getCity() }}, {{ flight.getairportarrive().getCountry() }})</p>
                            <p class="card-text" style="color: black;">Departure Time: {{ flight.getHeureDepart()|date('Y-m-d H:i:s') }}</p>
                            <p class="card-text" style="color: black;">Arrival Time: {{ flight.getHeureArrive()|date('Y-m-d H:i:s') }}</p>
                            <p class="card-text" style="color: black;">Class: {{ flight.getVolclass().getClassName() }}</p>
                            <p class="card-text price" style="color: black;">Price: ${{ flight.getVolclass().getPrice() }}</p>
                            <a href="{{ path('app_reservationvol_new', {'id': flight.getId()}) }}" class="btn btn-primary">View Reservation</a>
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div>
    </div>
</section>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const debounce = (func, delay) => {
            let timeoutId;
            return (...args) => {
                clearTimeout(timeoutId);
                timeoutId = setTimeout(() => {
                    func.apply(this, args);
                }, delay);
            };
        };

        const departureInput = document.getElementById('departureCity');
        const arrivalInput = document.getElementById('arrivalCity');
        const maxPriceInput = document.getElementById('maxPrice');
        const flightList = document.getElementById('flightList');

        const updateFlights = () => {
            const departureCity = departureInput.value.trim().toLowerCase();
            const arrivalCity = arrivalInput.value.trim().toLowerCase();
            const maxPrice = parseFloat(maxPriceInput.value.trim());

            // Loop through each flight card and show/hide based on input values
            document.querySelectorAll('.probootstrap-form').forEach(function(card) {
                const departureAirport = card.querySelector('.card-text.departure-airport').textContent.toLowerCase();
                const arrivalAirport = card.querySelector('.card-text.arrival-airport').textContent.toLowerCase();
                const price = parseFloat(card.querySelector('.card-text.price').textContent.replace('Price: $', ''));


                const showDeparture = departureCity === '' || departureAirport.includes(departureCity);
                const showArrival = arrivalCity === '' || arrivalAirport.includes(arrivalCity);
             const showPrice = isNaN(maxPrice) || price <= maxPrice;


                if (showDeparture && showArrival && showPrice) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });
        };

        const inputs = [departureInput, arrivalInput, maxPriceInput];
        inputs.forEach(input => {
            input.addEventListener('input', debounce(updateFlights, 300));
        });
    });
</script>


{% endblock %}

<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Voyage extends \App\Entity\Voyage implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'mois', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'annee', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'villedepart', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'User', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'programmes', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'reservationVoyages', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'destination', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'blog'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'mois', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'annee', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'villedepart', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'User', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'programmes', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'reservationVoyages', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'destination', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'blog'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Voyage $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getMois(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMois', []);

        return parent::getMois();
    }

    /**
     * {@inheritDoc}
     */
    public function setMois(string $mois): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMois', [$mois]);

        return parent::setMois($mois);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnnee(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnnee', []);

        return parent::getAnnee();
    }

    /**
     * {@inheritDoc}
     */
    public function setAnnee(int $annee): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnnee', [$annee]);

        return parent::setAnnee($annee);
    }

    /**
     * {@inheritDoc}
     */
    public function getVilledepart(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVilledepart', []);

        return parent::getVilledepart();
    }

    /**
     * {@inheritDoc}
     */
    public function setVilledepart(string $villedepart): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVilledepart', [$villedepart]);

        return parent::setVilledepart($villedepart);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(?\App\Entity\User $User): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$User]);

        return parent::setUser($User);
    }

    /**
     * {@inheritDoc}
     */
    public function getProgrammes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProgrammes', []);

        return parent::getProgrammes();
    }

    /**
     * {@inheritDoc}
     */
    public function addProgramme(\App\Entity\Programme $programme): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProgramme', [$programme]);

        return parent::addProgramme($programme);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProgramme(\App\Entity\Programme $programme): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProgramme', [$programme]);

        return parent::removeProgramme($programme);
    }

    /**
     * {@inheritDoc}
     */
    public function getReservationVoyages(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReservationVoyages', []);

        return parent::getReservationVoyages();
    }

    /**
     * {@inheritDoc}
     */
    public function addReservationVoyage(\App\Entity\ReservationVoyage $reservationVoyage): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReservationVoyage', [$reservationVoyage]);

        return parent::addReservationVoyage($reservationVoyage);
    }

    /**
     * {@inheritDoc}
     */
    public function removeReservationVoyage(\App\Entity\ReservationVoyage $reservationVoyage): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeReservationVoyage', [$reservationVoyage]);

        return parent::removeReservationVoyage($reservationVoyage);
    }

    /**
     * {@inheritDoc}
     */
    public function getDestination(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDestination', []);

        return parent::getDestination();
    }

    /**
     * {@inheritDoc}
     */
    public function setDestination(string $destination): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDestination', [$destination]);

        return parent::setDestination($destination);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlog(): ?\App\Entity\Blog
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlog', []);

        return parent::getBlog();
    }

    /**
     * {@inheritDoc}
     */
    public function setBlog(?\App\Entity\Blog $blog): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBlog', [$blog]);

        return parent::setBlog($blog);
    }

}
